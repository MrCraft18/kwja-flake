name: Build

on: [ push, pull_request ]

jobs:
  build:
    name: Build the project
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 8
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
            pipx install poetry
            echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Build package
        env:
          POETRY_PYTHON: ${{ steps.setup-python.outputs.python-path }}
        run: |
          poetry config virtualenvs.in-project true
          poetry env use $POETRY_PYTHON
          poetry build -o dist
      - name: Install KWJA from wheel (non-Windows)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          source .venv/bin/activate
          pip install dist/*.whl
      - name: Install KWJA from wheel (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          .\.venv\Scripts\Activate
          $wheelFile = (Get-ChildItem -Path dist -Filter *.whl).FullName
          pip install "${wheelFile}"
        shell: pwsh
      - name: Run KWJA (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          source .venv/bin/activate
          kwja --version
          kwja --help
          kwja --tasks typo,char,word --model-size tiny --text "自然言語処理"
          kwja --tasks typo,char,seq2seq,word --model-size tiny --text "自然言語処理"
      - name: Run KWJA (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          source .venv/bin/activate
          kwja --version
          kwja --help
          kwja --tasks typo,char,word --model-size tiny --text "自然言語処理" --device cpu  # avoid OOM
          kwja --tasks typo,char,seq2seq,word --model-size tiny --text "自然言語処理" --device cpu  # avoid OOM
      - name: Run KWJA (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          .\.venv\Scripts\Activate
          $env:PYTHONUTF8 = "1"
          kwja --version
          kwja --help
          kwja --tasks typo,char,word --model-size tiny --text "自然言語処理"
          kwja --tasks typo,char,seq2seq,word --model-size tiny --text "自然言語処理"
